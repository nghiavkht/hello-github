import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

def buildTime() {
    def df = new SimpleDateFormat("HHmmss")
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}

def buildDate() {
    def df = new SimpleDateFormat("yyyyMMdd-HHmm")
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}

android {
    def relType;
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.tera.hellojenkin"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
//        debug {
//            storeFile file("src/main/keystore/debug.keystore")
//            storePassword "android"
//            keyPassword "android"
//        }
        traders {
            storeFile file("extras/trader.keystore")
            storePassword 'trader2015'
            keyAlias 'traderandroid'
            keyPassword 'trader2015'
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
    }

//    productFlavors {
//        traders {
//            signingConfig signingConfigs.traders
//        }
//    }
    productFlavors {
        Uat {
            applicationId = "com.tera.hellojenkin.uat"
            versionName = "1.0-uat"
        }
        Prod {
            applicationId = "com.tera.hellojenkin"
            versionName = "1.0-prod"
            signingConfig signingConfigs.traders
        }
    }
    android.applicationVariants.all { variant ->
        def type = variant.buildType.name;
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk') && type != "debug") {

                def fileName = "app-${variant.productFlavors[0].name}-${type}-${variant.productFlavors[0].versionName}-${buildDate()}"
                fileName += ".apk";
                println "abc fileName " + fileName
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
// delete unaligned files
    android.applicationVariants.all { variant ->
        variant.assemble.doLast {
            variant.outputs.each { output ->
                if (variant.buildType.name != "debug") {
                    println "abc aligned " + output.outputFile
                    println "abc unaligned " + output.packageApplication.outputFile

                    File unaligned = output.packageApplication.outputFile;
                    File aligned = output.outputFile
                    if (!unaligned.getName().equalsIgnoreCase(aligned.getName())) {
                        println "abc deleting " + unaligned.getName()
                        unaligned.delete()
                    }
                }
            }
        }
    }


    task copyOutputApk(type: Copy) {
        from 'build/outputs/apk'
        into 'apk'
        exclude '**/*-unaligned.apk'
    }

    task buildTestDebug(dependsOn: ['clean', 'assembleDebug', 'check', 'copyOutputApk']) {
        assembleDebug.mustRunAfter clean
        check.mustRunAfter assembleDebug
        copyOutputApk.mustRunAfter check
    }
    task buildTestRelease(dependsOn: ['clean', 'assembleRelease', 'check', 'copyOutputApk']) {
        assembleRelease.mustRunAfter clean
        check.mustRunAfter assembleRelease
        copyOutputApk.mustRunAfter check
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.android.support:design:23.1.0'
}
